{{- with .Values.deployments.vault }}
---

# Vault ConfigMap
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
data:
  {{- $files := $.Files.Glob "config/vault/*" }}
  {{- range $path, $file := $files }}
  {{ base $path }}: |
  {{ toString $file | nindent 4 }}
  {{- end }}
---

# Vault StatefulSet
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
spec:
  serviceName: vault
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
    spec:
      containers:
        - name: vault
          image: "hashicorp/vault:{{ .version }}"
          command: ["vault", "server", "-config=/vault/config/config.json"]
          ports:
            - containerPort: 8200
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
          volumeMounts:
            - name: vault-data
              mountPath: /vault/data
            - name: vault-config
              mountPath: /vault/config
        - name: vault-init
          image: "hashicorp/vault:{{ .version }}"
          command:
            - sh
            - -c
            - |
              echo "Installing jq ..." && apk add --no-cache jq && \
              echo "Waiting for Vault to be ready..." && \
              until nc -z vault 8200; do \
                echo "Vault not ready (nc exit: $?), retrying..."; \
                sleep 1; \
              done && \
              echo "Vault is listening!" && \
              cp /vault/config/init.sh /vault/file/init.sh && \
              chmod +x /vault/file/init.sh && /vault/file/init.sh; \
              sleep infinity
          env:
            - name: VAULT_ADDR
              value: "http://vault:8200"
          volumeMounts:
            - name: vault-config
              mountPath: /vault/config
      volumes:
        - name: vault-data
          persistentVolumeClaim:
            claimName: vault-pvc
        - name: vault-config
          configMap:
            name: vault-config
---

# Vault Service
#
apiVersion: v1
kind: Service
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
spec:
  type: ClusterIP
  ports:
    - port: 8200
  selector:
    app.kubernetes.io/name: vault
---

# Vault IngressRoute
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`vault.nessus-tech.io`)
      kind: Rule
      services:
        - name: vault
          port: 8200
  tls:
    secretName: origin-tls
---

{{- end }}
